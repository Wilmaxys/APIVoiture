{
  "openapi": "3.0.0",
  "info": {
    "title": "Title",
    "version": "1.0.0",
    "description": "Description"
  },
  "paths": {
    "/cars": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Cars"
        ],
        "description": "Returns cars",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "cars",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Cars"
        ],
        "description": "Creates a car",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/NewCar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cars",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Cars"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Car",
            "schema": {
              "type": "Car",
              "item": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Update a existing car",
        "tags": [
          "Cars"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/NewCar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cars",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Cars"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/reservations": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Returns reservations",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "reservations",
            "schema": {
              "type": "array",
              "reservations": {
                "$ref": "#/definitions/Reservation"
              }
            }
          }
        },
        "tags": [
          "Reservation"
        ]
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Creates a reservation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/NewReservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reservations",
            "schema": {
              "$ref": "#/definitions/Reservation"
            }
          }
        },
        "tags": [
          "Reservation"
        ]
      }
    },
    "/reservations/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "reservation",
            "schema": {
              "type": "reservation",
              "reservation": {
                "$ref": "#/definitions/Reservation"
              }
            }
          }
        },
        "tags": [
          "Reservation"
        ]
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Update an existing reservation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/NewReservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reservations",
            "schema": {
              "$ref": "#/definitions/Reservation"
            }
          }
        },
        "tags": [
          "Reservation"
        ]
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "Reservation"
        ]
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login to the api",
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "The credentials are admin/admin",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    }
  },
  "definitions": {
    "NewCar": {
      "type": "object",
      "required": [
        "immat",
        "name",
        "brand",
        "description",
        "price"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "immat": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "Car": {
      "allOf": [
        {
          "$ref": "#/definitions/NewCar"
        },
        {
          "required": [
            "id"
          ]
        },
        {
          "properties": null,
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      ]
    },
    "NewReservation": {
      "type": "object",
      "required": [
        "carId",
        "begin",
        "end"
      ],
      "properties": {
        "carId": {
          "type": "number"
        },
        "begin": {
          "type": "date"
        },
        "end": {
          "type": "date"
        }
      }
    },
    "Reservation": {
      "allOf": [
        {
          "$ref": "#/definitions/NewReservation"
        },
        {
          "required": [
            "id"
          ]
        },
        {
          "properties": null,
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      ]
    },
    "User": {
      "type": "object",
      "required": [
        "user",
        "password"
      ],
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "components": {},
  "tags": []
}